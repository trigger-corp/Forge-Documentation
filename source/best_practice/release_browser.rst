.. _release_browser:

Releasing your browser add-ons
================================================================================
After you have finished using ``forge build`` and ``forge run`` to create your app, the next step is to prepare packaged output ready for submission to the app store of your choice.

The process for this varies according to the browser platform.

Chrome
--------------------------------------------------------------------------------
Use the ``chrome://chrome/extensions`` page in your Chrome browser to package your app as a ``.crx`` file. 

Pre-reqs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   * :ref:`Load the extension into your Chrome browser <chrome-getting-started-build>`

How to create the ``.crx``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Follow `these instructions in the Chrome documentation <http://code.google.com/chrome/extensions/packaging.html>`_ to package your app.

.. important:: you must keep the ``.pem`` file that is generated by chrome in the same directory as the ``chrome.crx`` package so that you can sign future builds with the same key to push updates to existing users

Firefox
--------------------------------------------------------------------------------

Pre-reqs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   * Firefox is a premium platform, so you will need to sign-up for a paid account. `Contact us to upgrade <mailto:support@trigger.io>`_.

How to create the ``.xpi``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Simple zip the contents of the `firefox/development` directory as a ``.xpi`` file to create a Firefox installer package:

::

   cd development/firefox
   zip addon.xpi -r *

Safari
--------------------------------------------------------------------------------

Pre-reqs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   * Safari is a premium platform, so you will need to sign-up for a paid account. `Contact us to upgrade <mailto:support@trigger.io>`_.
   * Create an Apple Developer Account and `sign-in to the Member Center <https://developer.apple.com/membercenter/index.action>`_
   * Sign-up for the Safari Developer Program and access the `Safari Dev Center <https://developer.apple.com/devcenter/safari/index.action>`_
   * Go to the `Developer Certificate Utility <https://developer.apple.com/certificates/index.action>`_ and create a Safari extension certificate by following the instructions having clicked 'Add Certificate'
   * Download the certificate you just created and add it to your Keychain

How to create the ``.safariextz``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

First you need to enable your browser for extension development - do this by `enabling the developer tools using these instructions  <http://developer.apple.com/library/safari/#documentation/Tools/Conceptual/SafariExtensionGuide/UsingExtensionBuilder/UsingExtensionBuilder.html>`_.

Once you have opened up the Extension Builder in Safari, click the '+' button in the bottom left and select the ``development/forge.safariextension`` sub-directory of your app directory.

Then click the 'Build Package...' button to create your ``.safariextz`` package.


Internet Explorer
--------------------------------------------------------------------------------

Pre-reqs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   * IE is a premium platform, so you will need to sign-up for a paid account. `Contact us to upgrade <mailto:support@trigger.io>`_.
   * `Install NSIS <http://nsis.sourceforge.net/Main_Page>`_

How to create the ``.exe``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Simply run:

::

   forge build ie

This will create a ``.exe`` for 32-bit and 64-bit platforms in the ``release/ie`` directory. The 64-bit installer installs the add-on in both the 64-bit and 32-bit versions of IE.

Contact us for information on how to customize the installer package.

How to sign a release
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

First you need to obtain a Windows Code Signing Certificate. Most certificate vendors can supply this but Microsoft also maintain a list at: http://social.technet.microsoft.com/wiki/contents/articles/2592.aspx

You will also need access to Microsoft's ``signtool.exe`` binary. This is installed by all versions of Microsoft Visual Studio including the free Express version which can be obtained from: http://www.microsoft.com/visualstudio/eng/downloads

Once you have a certificate you can perform the following step to sign your add-on and the installers::

  forge build ie --ie.profile.developer_certificate "your_certificate_filename.pfx" \
                 --ie.profile.developer_certificate_path "c:\path\to\your\certificate" \
                 --ie.profile.developer_certificate_password "your_certificate_password"

